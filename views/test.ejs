<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Test Page with Button and Input</title>
    <style>
        .input-container {
            display: flex;
            align-items: center;
        }
        input[type="text"] {
            padding: 8px;
            margin-right: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            padding: 8px 16px;
            font-size: 16px;
            border: 1px solid #ccc;
            background-color: #4CAF50;
            color: white;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
  <h1>Welcome to the Test Page!</h1>
  <p>This is a simple test page with an API fetch.</p>

  <!-- Button to trigger API fetch -->
  <button id="fetchDataButton" onclick="fetchCityData()">Search For Cities By State</button>
  <br></br>
  <div class="input-container">
    <input type="text" id="myInput" placeholder="Enter text">
    <button onclick="alertInput()">Submit</button>
    <br></br>
    <h2>Create New City</h2>
    <form action="/createCity" method="POST">
        <label for="city">City:</label>
        <input type="text" id="city" name="city" required>
        <br><br>
        <label for="state">State:</label>
        <input type="text" id="state" name="state" required>
        <br><br>
        <button type="submit">Create New City</button>
    </form>

    <form action="/updateCityName" method="POST">
        <label for="cityName">Old City Name:</label>
        <input type="text" id="cityName" name="cityName" required>
        <br><br>
        <label for="newName">New City Name:</label>
        <input type="text" id="newName" name="newName" required>
        <br><br>
        <button type="submit">Update City Name</button>
    </form>
</div>

<table>
  <% if (data && data.length > 0) { %>
    <% data.forEach(entry => { %>
      <tr>
        <td><%= entry.CityName %></td>
        <td><%= entry.State %></td>
        <td><%= entry.Lat + ' ' + entry.Lon %></td>
      </tr>
    <% })} %>
</table>

<script>
    function alertInput() {
        const userInput = document.getElementById("myInput").value;
        alert("You entered: " + userInput);
    }
</script>

<script>
    async function fetchCityData() {
    const userInputState = document.getElementById("myInput").value.trim(); // Get the state input
    try {
        // Make an API fetch request
        const response = await fetch("http://localhost:4000/cities"); // Adjusted to fetch all cities

        if (!response.ok) {
            throw new Error(`Error: ${response.status} ${response.statusText}`);
        }

        const data = await response.json(); // Parse the JSON response

   
        const filteredCities = data.filter(city => city.State.toLowerCase() === userInputState.toLowerCase());

        
        const cityDataContainer = document.getElementById("cityData");
        cityDataContainer.innerHTML = ""; 

        if (filteredCities.length > 0) {

            filteredCities.forEach(city => {
                const cityRow = `<p>${city.CityName} - ${city.State}</p>`;
                cityDataContainer.innerHTML += cityRow;
            });
        } else {
            cityDataContainer.innerHTML = "<p>No cities found for the given state.</p>";
        }

    } catch (error) {
        console.error("Error fetching data:", error);
        document.getElementById("cityData").innerHTML = `<p>Error fetching data: ${error.message}</p>`;
    }
  }   
</script>


  <!-- Display data (optional) -->
  <div id="cityData"></div>
  <div id="apiData2"></div>


  <!-- <script>
    // Add event listener for the button click
    document.getElementById('fetchDataButton').addEventListener('click', async function() {
      try {
        // Make an API fetch request (replace with your actual API URL)
        const response = await fetch("http://localhost:4000/team")
        const response2 = await fetch("http://localhost:4000/cities")

        //const response = await fetch('/api/data'); // The route defined in Express (relative path)

        if(!response.ok){
            throw new Error('Shit broke')
        }

        const data1 = await response.json(); // Assuming the API returns JSON data
        const data2 = await response2.json(); // Assuming the API returns JSON data


        // Output the data to the console
        console.log('API Response1:', data1);
        console.log('API Response2:', data2[0].CityID);


        // Optionally, display the response on the page (if needed)
        document.getElementById('apiData').innerHTML = JSON.stringify(data1, null, 2);
        document.getElementById('apiData2').innerHTML = JSON.stringify(data2, null, 2);

      } catch (error) {
        console.error('Error fetching data:', error);
      }
    });
  </script> -->
</body>
</html>